version: '3'

volumes:
  nexus-data:
  jenkins-data:

services:
  nexus:
    image: sonatype/nexus3:3.13.0
    restart: always
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
  jenkins:
    image: paruff/jenkins
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - "8080:8080"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - jenkins-data:/var/lib/jenkins/
    depends_on:
      - nexus
      - sonar
    environment:
      - NEXUS_PORT=8081
      - SONAR_PORT=9000
      - SONAR_DB_PORT=5432
  sonardb:
    restart: always
    image: postgres:10.4-alpine
    ports:
      - "5432:5432"
    environment:
     - POSTGRES_USER=sonar
     - POSTGRES_PASSWORD=sonar
  sonar:
    image: sonarqube:lts-alpine
    restart: always
    ports:
     - "9000:9000"
     - "9092:9092"
    depends_on:
      - sonardb
    environment:
     - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
     - SONARQUBE_JDBC_USERNAME=sonar
     - SONARQUBE_JDBC_PASSWORD=sonar

##########################################################################################
# DISABLED: GitLab takes too much memory and CPU. Demo uses GitHub repositories instead.
#
#  gitlab:
#    image: gitlab/gitlab-ce:latest
#    restart: always
#    networks:
#      - prodnetwork
#    environment:
#      GITLAB_OMNIBUS_CONFIG: |
#        # external_url 'https://gitlab.example.com'
#        # Add any other gitlab.rb configuration here, each on its own line
#    ports:
#      - "10080:80"
#      - "10443:443"
#      - "10022:22"
#    volumes:
#      - /opt/gitlab/config:/etc/gitlab
#      - /opt/gitlab/logs:/var/log/gitlab
#      - /opt/gitlab/data:/var/opt/gitlab

  zap:
    image: owasp/zap2docker-live

  anchore:
    image: anchore/jenkins

  prom:
    image: quay.io/prometheus/prometheus:v2.0.0
    volumes:
     - ./monitor/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
     - 9090:9090
    depends_on:
     - exporter
  exporter:
    image: prom/node-exporter:latest
    ports:
     - "9100:9100"
#    network_mode: host
  grafana:
    image: grafana/grafana
    ports:
     - "3000:3000"
    depends_on:
    - prom


  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8079:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]